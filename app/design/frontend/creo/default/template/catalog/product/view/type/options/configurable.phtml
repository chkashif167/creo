<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
$_product    = $this->getProduct();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
$_jsonConfig = $this->getJsonConfig();
$_renderers = $this->getChild('attr_renderers')->getSortedChildren();
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
<?php foreach($_attributes as $_attribute): ?>
<?php
        $_rendered = false;
        foreach ($_renderers as $_rendererName):?>

<div class="column color-area">
  <?php
            $_renderer = $this->getChild('attr_renderers')->getChild($_rendererName);
            if (method_exists($_renderer, 'shouldRender') && $_renderer->shouldRender($_attribute, $_jsonConfig)):
                $_renderer->setProduct($_product);
                $_renderer->setAttributeObj($_attribute);
                echo $_renderer->toHtml();
                $_rendered = true;
                break;
            endif;
        endforeach;
			?>
</div>
<?php
        if (!$_rendered):
        ?>
<dt style=" display:none;">
  <label class="required"><em></em><?php echo $_attribute->getLabel() ?></label>
</dt>
<dd<?php if ($_attribute->decoratedIsLast){?> class="last"<?php }?> style=" display: none;">
  <div class="input-box">
    <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
      <option><?php echo $this->__('Choose an Option...') ?></option>
    </select>
  </div>
</dd>
<?php endif; ?>
<?php endforeach; ?>
<div class="column color-area">
  <?php $_product = $this->getProduct(); ?>
  <?php if($_product->isSaleable()): ?>
  <?php if(!$_product->isGrouped()): ?>
  <label for="qty"><?php echo $this->__('Quantity:') ?></label>
  <span class="up">up</span>   
  <input type="text" pattern="\d*" name="qty" id="qty" maxlength="12" value="<?php echo max($this->getProductDefaultQty() * 1, 1) ?>" title="<?php echo $this->__('Qty') ?>" class="input-text qty" />
  <span class="down">down</span>  
  <?php endif; ?>
  <?php endif; ?>
</div>


<script type="text/javascript">
        var spConfig = new Product.Config(<?php echo $_jsonConfig ?>);
		  
		  jQuery('.up').on('click',function(){
    jQuery('#qty').val(parseInt(jQuery('#qty').val())+1);
});

			
			jQuery('.down').on('click',function(){
				if(jQuery('#qty').val() > 1) {
				 jQuery('#qty').val(parseInt(jQuery('#qty').val())-1);
				}
	
}); 
		  
</script> 
    
    
<?php echo $this->getChildHtml('after') ?>
<?php endif;?>
